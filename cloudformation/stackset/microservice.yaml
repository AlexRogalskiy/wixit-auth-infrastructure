---
AWSTemplateFormatVersion: 2010-09-09


Description: >
  This template shows how to use AWS CodePipeline and AWS CodeBuild to build an
  automated continuous deployment pipeline to Amazon Elastic Container Service
  (Amazon ECS) using clusters powered by AWS Fargate or Amazon Elastic Compute
  Cloud (Amazon EC2).


Parameters:
  Environment:
    Type: String
    Description: Prod or Uat or Dev

  EnvironmentStackSetName:
    Type: String

  TemplateBucket:
    Type: String
    Default: ec2-spring-boot-cloudformation-stack
    Description: >
      The S3 bucket from which to fetch the templates used by this stack.

  ContextPath:
    Type: String
    Default: /auth
    Description: url path prefix for all microservice calls

  LoadBalancerListenerCertificateArn:
    Type: String
    Description: SSl certificate arn for load balancer listene

Resources:
  Cluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/cloudformation/stackset/microservice-templates/ecs-cluster.yaml"
      Parameters:
        SourceSecurityGroup:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-LoadBalancerSourceSecurityGroup"
        Subnets:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-Subnets"
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-VpcId"

  LoadBalancerListener:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/cloudformation/stackset/microservice-templates/load-balancer-listener.yaml"
      Parameters:
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-VpcId"
        LoadBalancerArn:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-LoadBalancerArn"
        LoadBalancerListenerCertificateArn: !Ref LoadBalancerListenerCertificateArn
        ContextPath: !Ref ContextPath

  Service:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${TemplateBucket}/cloudformation/stackset/microservice-templates/service.yaml"
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.ClusterName
        TargetGroup: !GetAtt LoadBalancerListener.Outputs.TargetGroup
        SourceSecurityGroup:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-LoadBalancerSourceSecurityGroup"
        Subnets:
          Fn::ImportValue:
            !Sub "${EnvironmentStackSetName}-${Environment}-Subnets"


Outputs:
  Cluster:
    Description: Cluster
    Value: !GetAtt Cluster.Outputs.ClusterName
  Service:
    Description: Service
    Value: !GetAtt Service.Outputs.Service
